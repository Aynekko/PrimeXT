#! /usr/bin/env python
# encoding: utf-8
# a1batross, mittorn, 2018

from waflib import Utils
import os

def options(opt):
	# stub
	return

def configure(conf):
	if conf.env.DEST_OS != 'win32':
		conf.check_cc(lib='dl')

	if conf.env.DEST_OS == 'win32':
		conf.check_cxx( lib='user32' )

def build(bld):
	# shared sources
	source = bld.path.parent.ant_glob([
		'game_shared/bone_setup.cpp',
		'game_shared/common.cpp',
		'game_shared/ikcontext.cpp',
		'game_shared/jigglebones.cpp',
		'game_shared/material.cpp',
		'game_shared/mathlib.cpp',
		'game_shared/matrix.cpp',
		'game_shared/meshdesc.cpp',
		'game_shared/playermove.cpp',
		'game_shared/procbones.cpp',
		'game_shared/stringlib.cpp',
		'game_shared/virtualfs.cpp',
		'game_shared/trace.cpp'
	])
	
	source += bld.path.ant_glob([
		'ammo.cpp',
		'ammo_secondary.cpp',
		'ammohistory.cpp',
		'battery.cpp',
		'cdll_int.cpp',
		'death.cpp',
		'flashlight.cpp',
		'geiger.cpp',
		'health.cpp',
		'entity.cpp',
		'hud.cpp',
		'hud_msg.cpp',
		'hud_redraw.cpp',
		'hud_update.cpp',
		'hud_flashlight.cpp',
		'input.cpp',
		'input_xash3d.cpp',
		'input_mouse.cpp',
		'input_goldsource.cpp', # original xash3d too
		'menu.cpp',
		'message.cpp',
		'motd.cpp',
		'parsemsg.cpp',
		'saytext.cpp',
		'scoreboard.cpp',
		'status_icons.cpp',
		'statusbar.cpp',
		'text_message.cpp',
		'train.cpp',
		'utils.cpp',
		'r_view.cpp',
		'r_weather.cpp',
		'render/*.cpp'
	])

	#includes = Utils.to_list('. render hl/ ../dlls ../dlls/wpn_shared ../common ../engine ../pm_shared ../game_shared ../public ../utils/false_vgui/include')
	includes = [
		'.',
		'render/',
		'hl/',
		'../dlls',
		'../dlls/wpn_shared',
		'../common',
		'../engine',
		'../pm_shared',
		'../game_shared',
		'../public',
		'../utils/false_vgui/include'
	]
	
	defines = ['CLIENT_DLL']
	if bld.env.GOLDSRC:
		defines += ['GOLDSOURCE_SUPPORT']

	libs = []
	if bld.env.DEST_OS != 'win32':
		libs += ['DL']

	if bld.env.DEST_OS == 'win32':
		libs += ["USER32"]

	if bld.env.DEST_OS not in ['android', 'dos']:
		install_path = os.path.join(bld.env.GAMEDIR, bld.env.CLIENT_DIR)
	else:
		install_path = bld.env.PREFIX

	bld.shlib(
		source   = source,
		target   = 'client' + bld.env.POSTFIX,
		name     = 'client',
		features = 'c cxx',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = bld.get_taskgen_count()
	)
